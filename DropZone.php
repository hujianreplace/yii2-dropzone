<?php
namespace coldfox\dropzone;

use yii\helpers\ArrayHelper;
use yii\helpers\Json;
use yii\helpers\Url;

class DropZone extends AbstractDropZone {

    public $isMultiFile = false;

    public function initOptions() {
        parent::initOptions(); // TODO: Change the autogenerated stub
        $this->options = ArrayHelper::merge($this->options, ['timeout'=>1800000]);
    }

    public function initMockFile() {
        if (!empty($this->mockFiles)){
            //回显数据处理后的数组
            $mockFile_arr=[];
            $rootPath = \Yii::getAlias("@uploadRoot");
            foreach ($this->mockFiles as $key=>$value){
                $mockFile_arr[$key]['name']=basename($value);
                $file = $rootPath.$value;
                $mockFile_arr[$key]['size'] = 0;
                if(file_exists($file) && is_file($file)){
                    $mockFile_arr[$key]['size']=ceil(filesize($file));
                }
                $mockFile_arr[$key]['url']= $value;
            }
            $mockFileJson=Json::encode($mockFile_arr);
            $this->getView()->registerJs(
                '$.each('.$mockFileJson.',function(index,data){'.
                'var mockFile = {name:data.name, size: data.size,data_url:data.url};'.
                $this->containerId.'.emit("addedfile", mockFile);'.
                $this->containerId.'.emit("thumbnail", mockFile,data.url);'.
                $this->containerId.'.emit("success", mockFile,{"status":"success","savePath":data.url});'.
                $this->containerId.'.emit("complete", mockFile);'.
                $this->containerId.'.options.maxFiles ='.$this->containerId.'.options.maxFiles -1'.
                '});');
        }
    }

    /**
     * 初始化事件侦听
     */
    public function initEvents(){
        $str = $this->isMultiFile ? '[]' : '';
        $this->events=[
            'success'=>'function (file, response) {
                if(response.status==="success"){
                    var input = document.createElement("input");
                    input.setAttribute("type", "hidden");
                    input.setAttribute("name", "'.$this->inputName.$str.'");
                    input.setAttribute("value", response.savePath);
                    file.previewElement.appendChild(input);
                }
            }',
            'queuecomplete'=>'function(file){
                '.$this->containerId.'.on("removedfile",function(file){
                        $.ajax({
                            type: "POST",
                            url: "'.Url::to(['remove']).'",
                            data: {
                                url: file.previewElement.getElementsByTagName("input")[0].value
                            },
                            dataType: "json",
                            success: function(response){
                                if(response.status === "success"){
                                    '.$this->containerId.'.options.maxFiles++;
                                }
                            }
                        });
                    }
                );
            }',

        ];
        $this->events = ArrayHelper::merge($this->events, $this->clientEvents);
    }
}